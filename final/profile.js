document.addEventListener("DOMContentLoaded", async () => {
    await fetchProducts(); // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
    const orders = JSON.parse(localStorage.getItem("orders")) || [];
    displayOrders(orders); // –¢–µ–ø–µ—Ä—å —Ç–æ–≤–∞—Ä—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω—ã
});


async function fetchOrdersFromServer() {
    try {
        const response = await fetch('https://edu.std-900.ist.mospolytech.ru/exam-2024-1/api/orders?api_key=701002ea-0438-450a-a625-ee55a139c880');
        if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤: ${response.status} ${response.statusText}`);

        const rawOrders = await response.json();

        // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        const orders = rawOrders.map(order => {
            let totalCost = 0;  // –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞

            const items = order.good_ids.map(id => {
                const product = productsData.find(p => p.id === id);
                const price = product ? (product.discountPrice || product.price) : 0; // –ë–µ—Ä—ë–º —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π
                totalCost += price; // –°—á–∏—Ç–∞–µ–º —Å—É–º–º—É –∑–∞–∫–∞–∑–∞
                return { id, quantity: 1, price };
            });

            return {
                id: order.id,
                orderDate: order.created_at,
                name: order.full_name,
                phone: order.phone,
                email: order.email,
                address: order.delivery_address,
                deliveryDate: order.delivery_date,
                deliveryTime: order.delivery_interval,
                totalCost, // –°—á–∏—Ç–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞
                items
            };
        });

        console.log("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", orders);

        localStorage.setItem('orders', JSON.stringify(orders));
        displayOrders(orders);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        displayNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–∫–∞–∑—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
let productsData = [];

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
async function fetchProducts() {
    try {
        const response = await fetch(
            'https://edu.std-900.ist.mospolytech.ru/exam-2024-1/api/goods?api_key=701002ea-0438-450a-a625-ee55a139c880'
        );
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.statusText}`);
        }

        const data = await response.json();
        console.log(data);

        productsData = data.map((item) => {
            const discount = item.actual_price && item.discount_price
                ? Math.round(((item.actual_price - item.discount_price) / item.actual_price) * 100)
                : null;

            return {
                id: item.id,
                name: item.name,
                price: item.actual_price,
                discountPrice: item.discount_price || null,
                image: item.image_url,
                rating: item.rating,
                mainCategory: item.main_category,
                subCategory: item.sub_category,
            };
        });

        return productsData;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–≤–∞—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        return [];
    }
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö –∑–∞–∫–∞–∑–∞
function getOrderItemsDetails(orderItems) {
    if (!Array.isArray(orderItems) || orderItems.length === 0) {
        return "–¢–æ–≤–∞—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç";
    }

    return orderItems.map((orderItem) => {
        const product = productsData.find((p) => p.id === orderItem.id);

        if (product) {
            const price = product.discountPrice || product.price; // –¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π, –µ—Å–ª–∏ –µ—Å—Ç—å
            return `${product.name} (${orderItem.quantity || 0} —à—Ç.) ‚Äî ${price * (orderItem.quantity || 1)} ‚ÇΩ`;
        } else {
            return `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä (${orderItem.quantity || 0} —à—Ç.)`;
        }
    }).join(", ");
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å —É—á—ë—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö
function displayOrders(orders) {
    const tbody = document.querySelector(".orders-table tbody");
    tbody.innerHTML = "";

    orders.forEach((order, index) => {
        const itemsText = getOrderItemsDetails(order.items);

        const row = document.createElement("tr");
        row.id = order.id; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º id

        row.innerHTML = `
            <td>${index + 1}</td>
            <td>${formatDate(order.orderDate)}</td>
            <td>${itemsText}</td>
            <td>${order.totalCost || '0'} ‚ÇΩ</td>
            <td>${formatDate(order.deliveryDate)} ${order.deliveryTime || '‚Äî'}</td>
            <td>
                <button class="view-btn" data-index="${index}">üëÅÔ∏è</button>
                <button class="edit-btn" data-index="${index}">‚úèÔ∏è</button>
                <button class="delete-btn" data-index="${index}">üóëÔ∏è</button>
            </td>
        `;
        tbody.appendChild(row);
    });
}





// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function displayNotification(message, type = 'info') {
    const notifications = document.getElementById('notifications');
    notifications.textContent = message;
    notifications.className = `notification ${type}`;
    notifications.style.display = 'block';

    setTimeout(() => {
        notifications.style.display = 'none';
    }, 3000);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    fetchOrdersFromServer();
});


// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ
// function displayOrders(orders) {
//     const tbody = document.querySelector(".orders-table tbody");
//     tbody.innerHTML = "";

//     orders.forEach((order, index) => {
//         const itemsText = Array.isArray(order.items)
//             ? order.items.map(item => `${item.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä'} (${item.quantity || 0} —à—Ç.)`).join(", ")
//             : "–¢–æ–≤–∞—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç";

//         const row = document.createElement("tr");
//         row.innerHTML = `
//             <td>${index + 1}</td>
//             <td>${formatDate(order.orderDate)}</td>
//             <td>${itemsText}</td>
//             <td>${order.totalCost || '0'} ‚ÇΩ</td>
//             <td>${formatDate(order.deliveryDate)} ${order.deliveryTime || '‚Äî'}</td>
//             <td>
//                 <button class="view-btn" data-index="${index}">üëÅÔ∏è</button>
//                 <button class="edit-btn" data-index="${index}">‚úèÔ∏è</button>
//                 <button class="delete-btn" data-index="${index}">üóëÔ∏è</button>
//             </td>
//         `;
//         tbody.appendChild(row);
//     });
// }



// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(date) {
    if (!date) return "‚Äî"; // –ï—Å–ª–∏ –¥–∞—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    const parsedDate = new Date(date);
    return parsedDate.toLocaleDateString("ru-RU");
}

document.addEventListener("click", async (event) => {
    const orders = JSON.parse(localStorage.getItem("orders")) || [];
    const index = event.target.dataset.index;

    if (event.target.classList.contains("view-btn")) {
        const order = orders[index];
        const orderDetails = await fetchOrderDetails(order.id); // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
        if (orderDetails) {
            showViewModal(orderDetails); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        }
    }

    if (event.target.classList.contains("edit-btn")) {
        const order = orders[index];
        const orderDetails = await fetchOrderDetails(order.id);
        showEditModal(orderDetails);
        
    }

    if (event.target.classList.contains("delete-btn")) {
        showDeleteModal(index);
    }
});


async function fetchOrderDetails(orderId) {
    try {
        const response = await fetch(
            `https://edu.std-900.ist.mospolytech.ru/exam-2024-1/api/orders/${orderId}?api_key=701002ea-0438-450a-a625-ee55a139c880`
        );
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞: ${response.status} ${response.statusText}`);
        }
        const orderDetails = await response.json();
        console.log(orderDetails);
        return orderDetails;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞:', error);
        displayNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–∞
// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–∞
function showViewModal(order) {
    const modal = document.getElementById("view-modal");
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    document.getElementById("view-order-date").textContent = formatDate(order.created_at);
    document.getElementById("view-order-name").textContent = order.full_name || "‚Äî";
    document.getElementById("view-order-phone").textContent = order.phone || "‚Äî";
    document.getElementById("view-order-email").textContent = order.email || "‚Äî";
    document.getElementById("view-order-address").textContent = order.delivery_address || "‚Äî";
    document.getElementById("view-order-delivery-date").textContent = formatDate(order.delivery_date);
    document.getElementById("view-order-delivery-time").textContent = order.delivery_interval || "‚Äî";

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã (–Ω–∞–∑–≤–∞–Ω–∏—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    const itemsText = order.good_ids.map(id => {
        const product = productsData.find(p => p.id === id);
        if (product) {
            const price = product.discountPrice || product.price;
            return `${product.name} ‚Äî ${price} ‚ÇΩ`;
        }
        return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä";
    }).join(", ");
    document.getElementById("view-order-items").textContent = itemsText;

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞
    let totalCost = order.totalCost || 0;
    if (!totalCost) {
        totalCost = order.good_ids.reduce((sum, id) => {
            const product = productsData.find(p => p.id === id);
            if (product) {
                sum += product.discountPrice || product.price;
            }
            return sum;
        }, 0);
    }

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    document.getElementById("view-order-cost").textContent = `${totalCost} ‚ÇΩ`;

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    document.getElementById("view-order-comment").textContent = order.comment || "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = "block";
}



async function updateOrderOnServer(orderId, updatedOrderData) {
    try {
        const response = await fetch(
            `https://edu.std-900.ist.mospolytech.ru/exam-2024-1/api/orders/${orderId}?api_key=701002ea-0438-450a-a625-ee55a139c880`,
            {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updatedOrderData),
            }
        );

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ${response.status} ${response.statusText}`);
        }

        const updatedOrder = await response.json();
        console.log(updatedOrder);
        console.log("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω:", updatedOrder);

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
        displayNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!', 'success');
        return updatedOrder;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", error);
        displayNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
        return null;
    }
}

console.log(document.getElementById("edit-order-date"));
// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –æ–∫–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function showEditModal(order) {
    const modal = document.getElementById("edit-modal");

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º id –∑–∞–∫–∞–∑–∞ –≤ —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ —Ñ–æ—Ä–º—ã
    document.getElementById("edit-order-id").value = order.id;
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–æ–ª—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞ –≤ —Ñ–æ—Ä–º–µ
    document.getElementById("edit-order-date").value = order.delivery_date || ""; // –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    document.getElementById("edit-order-name").value = order.full_name || ""; // –ò–º—è
    document.getElementById("edit-order-phone").value = order.phone || ""; // –¢–µ–ª–µ—Ñ–æ–Ω
    document.getElementById("edit-order-email").value = order.email || ""; // Email
    document.getElementById("edit-order-address").value = order.delivery_address || ""; // –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
    document.getElementById("comment").value = order.comment || ""; // –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
    const timeSelect = document.querySelector("select[name='delivery_interval']");
    const timeOptions = ["08:00-12:00", "12:00-14:00", "14:00-18:00", "18:00-22:00"];

    // –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—É—â–∏—Ö –æ–ø—Ü–∏–π –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö
    timeSelect.innerHTML = "";
    timeOptions.forEach(timeSlot => {
        const option = document.createElement("option");
        option.value = timeSlot;
        option.textContent = timeSlot;
        if (order.delivery_interval === timeSlot) {
            option.selected = true;
        }
        timeSelect.appendChild(option);
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = "block";
}



// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
function showDeleteModal(index) {
    const modal = document.getElementById("delete-modal");
    modal.dataset.index = index;
    modal.style.display = "block";
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
document.getElementById("edit-order-form").addEventListener("submit", async (event) => {
    event.preventDefault();

    const orderId = document.getElementById("edit-order-id").value;

    const updatedOrderData = {
        name: event.target["edit-order-name"].value,
        phone: event.target["edit-order-phone"].value,
        email: event.target["edit-order-email"].value,
        address: event.target["edit-order-address"].value,
        deliveryDate: event.target["edit-order-date"].value,
        deliveryTime: event.target["delivery_interval"].value,
        comment: event.target["comment"].value,
    };

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const updatedOrder = await updateOrderOnServer(orderId, updatedOrderData);
    if (updatedOrder) {
        // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const orders = JSON.parse(localStorage.getItem("orders")) || [];
        const index = orders.findIndex(order => order.id === orderId);
        if (index !== -1) {
            orders[index] = { ...orders[index], ...updatedOrderData };
            localStorage.setItem("orders", JSON.stringify(orders));
            displayOrders(orders); // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
        }
        closeModals(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    }
});

function displayNotification(message, type = 'info') {
    const notifications = document.getElementById('notifications');
    const messageElement = document.getElementById('notification-message');
    const closeButton = document.getElementById('close-notification');

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    messageElement.textContent = message;

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (info, success, error)
  

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    notifications.style.display = 'flex';  // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ flex

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
    closeButton.style.display = 'inline-block';  // –ö–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∏–¥–Ω–∞

    
}





async function deleteOrderFromServer(orderId) {
    try {
        const response = await fetch(
            `https://edu.std-900.ist.mospolytech.ru/exam-2024-1/api/orders/${orderId}?api_key=701002ea-0438-450a-a625-ee55a139c880`,
            {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            }
        );

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ${response.status} ${response.statusText}`);
        }

        const result = await response.json();  // –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
        console.log("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω:", result);

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
        displayNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!', 'success');
        return result;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", error);
        displayNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
        return null;
    }
}


// –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
document.getElementById("confirm-delete-btn").addEventListener("click", async () => {
    const orders = JSON.parse(localStorage.getItem("orders")) || [];
    const index = document.getElementById("delete-modal").dataset.index;
    const orderId = orders[index].id;  // –ü–æ–ª—É—á–∞–µ–º ID –∑–∞–∫–∞–∑–∞

    // –£–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑ —Å —Å–µ—Ä–≤–µ—Ä–∞
    const deletedOrder = await deleteOrderFromServer(orderId);
    
    if (deletedOrder) {
        // –ï—Å–ª–∏ –∑–∞–∫–∞–∑ –±—ã–ª —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞, —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏ –∏–∑ localStorage
        orders.splice(index, 1);
        localStorage.setItem("orders", JSON.stringify(orders));

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤
        displayOrders(orders);

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        closeModals();
    }
});



// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
document.querySelectorAll(".close-btn").forEach((btn) => {
    btn.addEventListener("click", closeModals);
});
const notification = document.getElementById("notifications");
const closeButton = document.getElementById("close-notification");

function showNotification(message) {
    document.getElementById("notification-message").textContent = message;
    notification.style.display = "flex"; // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    closeButton.style.display = "inline-block";
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
closeButton.addEventListener("click", () => {
    notification.style.display = "none";
});




function closeModals() {
    document.querySelectorAll(".modal").forEach((modal) => {
        modal.style.display = "none";
    });
}
